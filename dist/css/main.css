:root {
  --color-white: #fff;
  --color-100:   #f8f9fa;
  --color-200:   #e9ecef;
  --color-300:   #dee2e6;
  --color-400:   #ced4da;
  --color-500:   #adb5bd;
  --color-600:   #6c757d;
  --color-700:   #495057;
  --color-800:   #343a40;
  --color-900:   #212529;
  --color-black: #000;
  --color-text-primary:   #4D4845;
  --color-text-secondary: #F4DFB2;
  --color-text-tertiary: #A4CDD1;
  --color-link: #387C89;
  --color-link-visited: #E57255;
  --color-link-hover: #E57255;
  --color-link-active: #E57255;
  --color-link-focus: #E57255;
  --color-bg-primary: #A4CDD1;
  --color-bg-secondary: #FAB87E;
  --color-bg-tertiary: #387C89;
  --color-bg-quaternary: #F4DFB2;
  --color-facebook: #3b5999;
  --color-messenger: #0084ff;
  --color-twitter: #55acee;
  --color-linkedin: #0077B5;
  --color-skype: #00AFF0;
  --color-dropbox: #007ee5;
  --color-wordpress: #21759b;
  --color-vimeo: #1ab7ea;
  --color-slideshare: #0077b5;
  --color-vk: #4c75a3;
  --color-tumblr: #34465d;
  --color-yahoo: #410093;
  --color-googleplus: #dd4b39;
  --color-pinterest: #bd081c;
  --color-youtube: #cd201f;
  --color-stumbleupon: #eb4924;
  --color-reddit: #ff5700;
  --color-quora: #b92b27;
  --color-yelp: #af0606;
  --color-weibo: #df2029;
  --color-producthunt: #da552f;
  --color-hackernews: #ff6600;
  --color-soundcloud: #ff3300;
  --color-blogger: #f57d00;
  --color-whatsapp: #25D366;
  --color-wechat: #09b83e;
  --color-line: #00c300;
  --color-medium: #02b875;
  --color-vine: #00b489;
  --color-slack: #3aaf85;
  --color-instagram: #e4405f;
  --color-dribbble: #ea4c89;
  --color-flickr: #ff0084;
  --color-foursquare: #f94877;
  --color-behance: #131418;
  --color-snapchat: #FFFC00;
}

:root {
  --fz-normal: rem(18);
  --fz-h1: rem(60);
  --fz-h2: rem(22);
  --fz-h3: rem(20);
  --fz-h4: rem(18);
  --ff-normal: 'Montserrat', sans-serif;
  --ff-title-primary: Girassol, sans-serif;
  --ff-title-secondary: 'Sansita Swashed', cursive;
  --lh-extra-thin: 1;
  --lh-thin: 1.2;
  --lh-normal: 1.5;
  --lh-medium: 1.8;
  --lh-large: 2;
  --lh-extra-large: 2.4;
  --fw-thin: 100;
  --fw-extra-light: 200;
  --fw-light: 300;
  --fw-regular: 400;
  --fw-medium: 500;
  --fw-semibold: 600;
  --fw-bold: 700;
  --fw-extra-bold: 800;
  --fw-black: 900;
}

:root {
  --max-width: 1200px;
  --min-width: 335px;
  --padding-thin: 10px;
  --padding-large: 20px;
  --margin-thin: 10px;
  --margin-large: 20px

;
}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  font-family: var(--ff-normal);
  font-size: var(--fz-normal);
  color: var(--color-text-primary);
  line-height: var(--lh-normal);
  background: var(--color-bg-primary);
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--ff-title-primary);
  line-height: var(--lh-thin);
  font-weight: var(--fw-bold);
}

h1 {
  font-size: var(--fz-h1);
  text-transform: uppercase;
}

h2 {
  font-size: var(--fz-h2);
  text-transform: uppercase;
}

h3 {
  font-size: var(--fz-h3);
}

h4 {
  font-size: var(--fz-h4);
}

h5 {
  font-size: var(--fz-h5);
}

h6 {
  font-size: var(--fz-h6);
}

hr {
  border: 0;
  height: 4px;
  background: var(--color-500);
  margin-top: 40px;
  margin-bottom: 40px;
}

hr.hr-thin {
  height: 1px;
}

hr.hr-large {
  height: 8px;
}

img {
  width: 100%;
}

a:link {
  color: var(--color-link);
  text-decoration: none;
}

a:visited {
  color: var(--color-link-visited);
}

a:hover {
  color: var(--color-link-hover);
  text-decoration: underline;
}

a:active {
  color: var(--color-link-active);
}

a:focus {
  color: var(--color-link-focus);
}

.wrapper {
  max-width: var(--max-width);
  min-width: var(--min-width);
  margin: 0 auto;
}

.grid-wrapper {
  display: grid;
  grid-template-columns: auto minmax(var(--min-width), var(--max-width)) auto;
  grid-column-gap: 30px;
}

.grid-center {
  grid-column: 2/3;
}

header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

header img {
  height: 40px;
  width: 160px;
}

header ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  text-decoration: none;
  list-style: none;
}

header li {
  padding: 20px;
}

@media screen and (min-width: 768px) {
  ul {
    -webkit-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2;
  }
}

/*.carrousel{
  display: flex;
  justify-content: space-between;

  div{
    width: calc(33.3333% - 20px);

  }
}*/
.swiper-container {
  width: 100%;
  padding-top: 50px;
  padding-bottom: 50px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.swiper-slide {
  background-position: center;
  background-size: cover;
  width: 300px;
  height: 300px;
}

.liste-acteurs {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.liste-acteurs .acteur {
  width: calc(20% - 30px);
}

.liste-films {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.liste-films article {
  -ms-flex-preferred-size: 24%;
      flex-basis: 24%;
  padding: 20px;
  border: 1px black solid;
  margin-bottom: 20px;
}

.template {
  display: none;
}

.m-t-5 {
  margin-top: 5px !important;
}

.p-t-5 {
  padding-top: 5px !important;
}

.m-b-5 {
  margin-bottom: 5px !important;
}

.p-b-5 {
  padding-bottom: 5px !important;
}

.m-l-5 {
  margin-left: 5px !important;
}

.p-l-5 {
  padding-left: 5px !important;
}

.m-r-5 {
  margin-right: 5px !important;
}

.p-r-5 {
  padding-right: 5px !important;
}

.m-t-10 {
  margin-top: 10px !important;
}

.p-t-10 {
  padding-top: 10px !important;
}

.m-b-10 {
  margin-bottom: 10px !important;
}

.p-b-10 {
  padding-bottom: 10px !important;
}

.m-l-10 {
  margin-left: 10px !important;
}

.p-l-10 {
  padding-left: 10px !important;
}

.m-r-10 {
  margin-right: 10px !important;
}

.p-r-10 {
  padding-right: 10px !important;
}

.m-t-15 {
  margin-top: 15px !important;
}

.p-t-15 {
  padding-top: 15px !important;
}

.m-b-15 {
  margin-bottom: 15px !important;
}

.p-b-15 {
  padding-bottom: 15px !important;
}

.m-l-15 {
  margin-left: 15px !important;
}

.p-l-15 {
  padding-left: 15px !important;
}

.m-r-15 {
  margin-right: 15px !important;
}

.p-r-15 {
  padding-right: 15px !important;
}

.m-t-20 {
  margin-top: 20px !important;
}

.p-t-20 {
  padding-top: 20px !important;
}

.m-b-20 {
  margin-bottom: 20px !important;
}

.p-b-20 {
  padding-bottom: 20px !important;
}

.m-l-20 {
  margin-left: 20px !important;
}

.p-l-20 {
  padding-left: 20px !important;
}

.m-r-20 {
  margin-right: 20px !important;
}

.p-r-20 {
  padding-right: 20px !important;
}

.u-hidden-visually {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
          clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important;
}

.u-hidden {
  display: none !important;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
